basePath: /
definitions:
  handler.errorResponse:
    properties:
      message:
        description: '''json:"message"'''
        type: string
    type: object
  handler.getAllListsResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.TodoList'
        type: array
    type: object
  handler.signInInput:
    properties:
      password:
        type: string
      username:
        type: string
    required:
    - password
    - username
    type: object
  handler.statusResponse:
    properties:
      status:
        type: string
    type: object
  models.TodoItem:
    properties:
      description:
        type: string
      done:
        type: boolean
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  models.TodoList:
    properties:
      description:
        type: string
      id:
        type: integer
      title:
        type: string
    required:
    - title
    type: object
  models.UpdateItemInput:
    properties:
      description:
        type: string
      done:
        type: boolean
      title:
        type: string
    type: object
  models.UpdateListInput:
    properties:
      description:
        type: string
      title:
        type: string
    type: object
  models.User:
    properties:
      name:
        type: string
      password:
        type: string
      username:
        type: string
    required:
    - name
    - password
    - username
    type: object
host: localhost:8000
info:
  contact: {}
  description: API Server for TodoList Application
  title: Todo App API
  version: "1.0"
paths:
  /api/items/{id}:
    delete:
      description: Delete a specific item by its ID
      operationId: delete-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      responses:
        "200":
          description: Delete successful
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Invalid item ID
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete an item by its ID
      tags:
      - items
    get:
      consumes:
      - application/json
      description: Get a specific item by its ID
      operationId: get-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: Item details
          schema:
            $ref: '#/definitions/models.TodoItem'
        "400":
          description: Invalid item ID
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get an item by its ID
      tags:
      - items
    put:
      consumes:
      - application/json
      description: Update the details of a specific item
      operationId: update-item-by-id
      parameters:
      - description: Item ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item data to update
        in: body
        name: item
        required: true
        schema:
          $ref: '#/definitions/models.UpdateItemInput'
      produces:
      - application/json
      responses:
        "200":
          description: Update successful
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Invalid input or ID
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update an item by its ID
      tags:
      - items
  /api/lists:
    get:
      consumes:
      - application/json
      description: get all todo lists of the authenticated user
      operationId: get-all-lists
      produces:
      - application/json
      responses:
        "200":
          description: list of todo lists
          schema:
            $ref: '#/definitions/handler.getAllListsResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all todo lists
      tags:
      - lists
    post:
      consumes:
      - application/json
      description: create todo list
      operationId: create-list
      parameters:
      - description: list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoList'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create todo list
      tags:
      - lists
  /api/lists/{id}:
    delete:
      consumes:
      - application/json
      description: Delete a todo list by its ID
      operationId: delete-list
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List deleted successfully
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Invalid ID param
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: List not found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Delete todo list by ID
      tags:
      - lists
    get:
      description: Get a todo list by its ID
      operationId: get-list-by-id
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TodoList'
        "400":
          description: Invalid ID param
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: List not found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get todo list by ID
      tags:
      - lists
    put:
      consumes:
      - application/json
      description: Update an existing todo list by its ID
      operationId: update-list
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Updated list info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.UpdateListInput'
      produces:
      - application/json
      responses:
        "200":
          description: List updated successfully
          schema:
            $ref: '#/definitions/handler.statusResponse'
        "400":
          description: Invalid ID param or request body
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: List not found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Update todo list by ID
      tags:
      - lists
  /api/lists/{id}/items:
    get:
      consumes:
      - application/json
      description: Get all items from a specific list
      operationId: get-all-items
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: List of items
          schema:
            items:
              $ref: '#/definitions/models.TodoItem'
            type: array
        "400":
          description: Invalid list ID
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Get all items in a list
      tags:
      - items
    post:
      consumes:
      - application/json
      description: Create a new item in a specific list
      operationId: create-item
      parameters:
      - description: List ID
        in: path
        name: id
        required: true
        type: integer
      - description: Item data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.TodoItem'
      produces:
      - application/json
      responses:
        "200":
          description: Item created successfully
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Invalid data or list ID
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal server error
          schema:
            $ref: '#/definitions/handler.errorResponse'
      security:
      - ApiKeyAuth: []
      summary: Create a new item
      tags:
      - items
  /auth/sign-in:
    post:
      consumes:
      - application/json
      description: authenticate user and return token
      operationId: sign-in
      parameters:
      - description: credentials
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/handler.signInInput'
      produces:
      - application/json
      responses:
        "200":
          description: token
          schema:
            additionalProperties:
              type: string
            type: object
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignIn
      tags:
      - auth
  /auth/sign-up:
    post:
      consumes:
      - application/json
      description: create account
      operationId: create-account
      parameters:
      - description: account info
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            type: integer
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/handler.errorResponse'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/handler.errorResponse'
        default:
          description: ""
          schema:
            $ref: '#/definitions/handler.errorResponse'
      summary: SignUp
      tags:
      - auth
securityDefinitions:
  ApiKeyAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
